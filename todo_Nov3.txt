TODO:
11/3/15

Urgent:
  valid moves method
  win condition - How are we importing this to allow the engine to be modular

AI:
  Do we compute after a user makes a turn, or do we run for all cases?
  Will this reduce wait time, or will it be too computationally complex?
  Probably the simplest case first

Selecting a piece/Making moves:
  Send new and old location of the piece to the back end
  Restrict movement to valid moves
  Delete pieces method
  Prevent pieces from moving through eachother

Design Choices:

We are not allowing turns to pass
  King moving back to home is a loss condition
  force him to do that

Representing the board as a list of pieces
  Advantages:
    Simple for AI and us
    Would be better to use an Array instead of a Doubly linked list
  Disadvantages:
    Complexity? Constant time, nvm were good

Two Threads:
    One is AI running computations
    The other is taking turns
    Decision Trees Everywhere!!!

Should we use a deferred?
  Register information handling in the GUI from the backend makes more sense
  ASYNC might be better than multithreading
  Nothing happens until the player makes a move
  Can we flush the scheduler to prevent the AI from running too many computations
    Abort callback computation or something?
    If this doesnt work out back to threads because we know how to kill those

